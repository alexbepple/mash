#!/usr/bin/env -S pkgx --quiet bash

set -eo pipefail

if [ "$1" == --version ]; then
  echo "mash 0.0.0-dev"
  exit 0
fi

if [ -z "$1" -o "$1" == "--help" ]; then
  echo "mash <scriptname> [args...]" 1>&2
  if [ "$1" == "--help" ]; then
    exit 0
  else
    exit 1
  fi
fi

if [ -n "$RUNNER_DEBUG" -a -n "$GITHUB_ACTIONS" ] || [ -n "$VERBOSE" ]; then
  set -x
fi

if ! command -v pkgx >/dev/null; then
  echo "error: pkgx not found" 1>&2
  exit 1
fi
if ! command -v curl >/dev/null; then
  curl() {
    pkgx --quiet curl "$@"
  }
fi

run() {
  SCRIPTNAME=$1
  shift

  # github won’t give us `github.com/pkgx` because they are meanies
  if [[ $SCRIPTNAME == u/pkgx/* ]]; then
    SCRIPTNAME="${SCRIPTNAME/pkgx/pkgxdev}"
  fi

  if [ "$(uname)" = Darwin ]; then
    CACHE="${XDG_CACHE_HOME:-$HOME/Library/Caches}/mash/$SCRIPTNAME"
  else
    CACHE="${XDG_CACHE_HOME:-$HOME/.cache}/mash/$SCRIPTNAME"
  fi

  get_etag() {
    grep -i ETag "$CACHE/headers.txt" | sed -e 's/ETag: "\(.*\)"/\1/I' | tr -d '\r'
  }

  if [ -f "$CACHE/headers.txt" ] && ETAG=$(get_etag); then
    ETAG=(--header If-None-Match:\ $ETAG)
  else
    mkdir -p "$CACHE"
  fi

  URL="https://pkgxdev.github.io/mash/$SCRIPTNAME"

  if curl \
      "${ETAG[@]}" \
      --silent \
      --fail \
      --show-error \
      --dump-header "$CACHE/headers.txt" \
      --output "$CACHE/script" \
      "$URL"
  then
    chmod +x "$CACHE/script"
    exec "$CACHE/script" "$@"
  elif [ -f "$CACHE/script" ]; then
    echo "warn: couldn’t update check" 1>&2
    exec "$CACHE/script" "$@"
  else
    echo "error: $URL" 1>&2
    exit 2
  fi
}

cmd=$1
shift

case "$cmd-$1" in
tea-erc20|media-yt2mp3|pantry-checker|tmux-sessionizer|demo-test-pattern)
  cmd="$cmd-$1"
  shift;;
*)
  if [[ "$cmd" == pkgx/* || "$cmd" == pkgxdev/* ]]; then
    cmd="mxcl/$(basename $cmd)"
  fi

  if [[ "$cmd" == */* ]]; then
    cmd="u/$cmd"
  fi
esac

run $cmd "$@"
